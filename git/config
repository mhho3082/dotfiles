[user]
    # Please change this to your own user name and email
    name = Max Ho
    email = 73323597+mhho3082@users.noreply.github.com

[core]
    editor = nvim
    eol = lf
    autocrlf = false

[init]
    defaultBranch = main

[push]
    default = current
    followTags = true

[code]
    editor = nvim

[fetch]
    prune = true

# ---

# Some ideas from https://github.com/mathiasbynens/dotfiles

[alias]
    b = checkout -b
    a = add
    aa = add -A
    c = commit
    m = merge

    p = push
    pu = pull

    cl = clone
    co = checkout
    cp = cherry-pick

    s = status -sb
    l = log --graph --abbrev-commit --date-order --all

    # Get all recent updates
    sync = pull --rebase --all
    # Force local changes up to remotes
    force = push --all --force-with-lease
    # Save and push all temporary changes in case of emergency
    emergency = !"git checkout -B \"EMERGENCY-$(git config user.email)\"; git add -A; git commit -m \"WIP: Emergency commit on $(date +%d/%m/%Y\\ %H:%M:%S)\"; git push --force"

    # Remove all changes from staging
    unstage = reset --mixed
    # Remove all changes made, including untracked files
    discard = !"git reset --hard; git clean -f"
    # Undo last commit softly
    uncommit = reset HEAD~1 --mixed

    # Diff between latest commit and current
    d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
    # `git di i` Diff between i revisions ago and current
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

    # Remove merged branches
    # (https://dev.to/wojciechko/git-alias-to-delete-merged-branches-3cop)
    cleanup = !"f() { git branch --merged ${1:-main} | egrep -v \"(^\\*|${1:-main}|main|master|dev)\" | xargs --no-run-if-empty git branch -d;  };f"

    # Show verbose data
    tags = tag -l
    branches = branch --all --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
    remotes = remote --verbose
    contributors = shortlog --summary --numbered --no-merges

    # Get SHA of head, useful in detached head
    sha = rev-parse --short HEAD

# ---

[log]
    decorate = true
    abbrevCommit = true

[format]
    pretty = "%C(magenta)%h%Creset -%C(red)%d%Creset %s %C(green)(%cr) %C(cyan)<%an>%Creset"

# ---

[merge]
    tool = nvim
    conflictstyle = diff3

[mergetool]
  prompt = false

[mergetool "nvim"]
    cmd = nvim -f -c \"Gdiffsplit!\" \"$MERGED\"

[mergetool "vscode"]
    cmd = code --wait $MERGED

# ---

[diff]
    tool = nvimdiff

[difftool]
    prompt = false

[difftool "nvimdiff"]
    cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""

[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE

# ---

[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f

# ---

[credential "https://github.com"]
    helper = !/usr/bin/gh auth git-credential

[credential "https://gist.github.com"]
    helper = !/usr/bin/gh auth git-credential

[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
    insteadOf = "github:"

[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
    insteadOf = "gist:"
